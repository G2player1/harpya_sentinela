services:
  api-python:
    build: ./api_python
    container_name: sentinela-python
    depends_on:
      - kafka
      - mosquitto
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./api_python:/app
    networks:
      - vitanet

  api-java:
    build: ./health
    container_name: sentinela-java
    depends_on:
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8081:8081"
    networks:
      - vitanet

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - vitanet

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - vitanet

  kafka-create-topics:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - kafka
    entrypoint:
      - sh
      - -c
      - |
        # Aguarda o Kafka subir
        until kafka-topics --bootstrap-server kafka:9092 --list; do
          echo "Esperando Kafka iniciar..."
          sleep 5
        done
        # Cria o tópico com 6 partições se não existir
        kafka-topics --bootstrap-server kafka:9092 --create --topic health.data --partitions 6 --replication-factor 1 --if-not-exists
        echo "Tópico criado (ou já existia)."
    networks:
      - vitanet

  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
      - ./mosquitto/passwd:/mosquitto/passwd
    networks:
      - vitanet

networks:
  vitanet:
    driver: bridge

